version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: lifeautomations
      POSTGRES_PASSWORD: ${DB_PASSWORD:-lifeautomations}
      POSTGRES_DB: lifeautomations
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lifeautomations"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: ghcr.io/rubenvitt/life-automations
    build: .
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: lifeautomations
      DB_PASSWORD: ${DB_PASSWORD:-lifeautomations}
      DB_NAME: lifeautomations
      NOTION_API_KEY: ${NOTION_API_KEY}
      TODOIST_API_KEY: ${TODOIST_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      CLIENT_API_REGISTRATION_KEY: ${CLIENT_API_REGISTRATION_KEY}
      FIREFLY_API_KEY: ${FIREFLY_API_KEY}
      FIREFLY_BASE_URI: ${FIREFLY_BASE_URI}
      NOTION_DAILY_REVIEWS_DB: ${NOTION_DAILY_REVIEWS_DB}
      TODOIST_DEFAULT_PROJECT: ${TODOIST_DEFAULT_PROJECT}
      NOTION_WEEKLY_REVIEWS_DB: ${NOTION_WEEKLY_REVIEWS_DB}
      NOTION_MONTHLY_REVIEWS_DB: ${NOTION_MONTHLY_REVIEWS_DB}
      NOTION_YEARLY_REVIEWS_DB: ${NOTION_YEARLY_REVIEWS_DB}
      NOTION_LONGTERM_REVIEWS_DB: ${NOTION_LONGTERM_REVIEWS_DB}
      NOTION_MOMENTS_DB: ${NOTION_MOMENTS_DB}
      NOTION_CONTRACTS_DB: ${NOTION_CONTRACTS_DB}
      NOTION_GOALS_DB: ${NOTION_GOALS_DB}
      NOTION_PROJECTS_DB: ${NOTION_PROJECTS_DB}
      NOTION_LEBENSBEREICHE_DB: ${NOTION_LEBENSBEREICHE_DB}
      NOTION_LAST_NEW_PROJECT_INITIAL: ${NOTION_LAST_NEW_PROJECT_INITIAL}
    ports:
      - "9003:3003"

volumes:
  postgres_data: